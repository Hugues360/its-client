[general]
# ID of this geoserver instance
instance-id = ora_geo_1234
# Prefix to queue names; default: none; can be an empty string for /-rooted queues
#prefix = 5GCroCo
# Suffix to queue names; default: v2x
#suffix = v2x

[local]
# There are two ways to connect to the local broker, and either,
# not both, is required:
# - establish a TCP/IP connection to host:port
# - establish a TCP-like connection over the UNIX socket socket-path
# Hostname or IP of the local broker
host = 127.0.0.1
# TCP port the local broker listens on (non-TLS)
port = 1883
# Path to the UNIX socket to connect to
#socket-path = /run/mqtt-broker/socket
# Username and password to authenticate with against the local broker,
# empty or unset username for no authentication; default: unset
#username = user
#password = secret
# MQTT client ID to identify on the local broker; default: iqm
#client_id = iqm
# Name of the local inter-queue; default: interQueue
#interqueue = interQueue

[authority]
# Type of central authority, one of: file, http, mqtt
# for now, mqtt is not implemented
type = file

# Period in seconds at which to reload the file; mandatory;
# (valid for type: file, http; not valid for type: mqtt)
reload = 60

# For type == file:
# - path of the fle containing the neighbours configuration
path = /etc/its/neighbours.cfg

# For type == http:
# - URI where to retrieve the neighbours configuration;
#uri = https://central-authority/path/to/neighbours/config/

# For type == mqtt:
# - MQTT broker to connect to
#host = 1.2.3.4
# - TCP port the MQTT broker listens on (non-TLS)
#port = 1883
# - MQTT username and password to authenticate with against the broker,
#   empty or unset username for no authentication; default: unset
#username = user
#password = secret
# - MQTT client-id to connect as
#client_id = CLIENT_ID
# - topic to listen on; mandatory
#topic = 5GCroCo/neighbours/v2x/ora_geo_1234

[neighbours]
# The MQTT client ID to identify to neighbours; default: general.instance-id
#client_id = ora_geo_1234
