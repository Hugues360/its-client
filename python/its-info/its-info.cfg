[general]
# Instance ID of the broker (not to be confused with the MQTT client ID); mandatory
instance_id = ID

# Type of the instance, default: local
# instance_type = TYPE

# Periodicity of info messages, in seconds; validity is twice periodicity
# period = SECS

# IP of the DNS server, optional; if unset, use IP from interface, below
# dns_ip = IP

# Hostname or IP of the NTP server, optional; if unset, use IP from interface, below
# ntp_host = HOST

# NIC to extract IPs adresses that will be NTP and DNS server; optional
# interface = NIC

# Notes:
#  * if neither dns_ip nor interface are specified, then the domain_name_servers field will not be included in the info message
#  * if neither ntp_host nor interface are specified, then the ntp_servers field will not be included in the info message

[mqtt]
# MQTT client ID to connect as; defaults to the instance ID, general.instance_id, above
# client_id = ID

# MQTT topic to post info message on; default: info
# topic = TOPIC

# Path to the UNIX socket the broker listens on
# socket-path = PATH

# Username to authenticate to the MQTT broker; default: unset, no authentication
# username = USERNAME

# Password to authenticate to the MQTT broker; default: unset, no authentication
# password = PASSWORD

# Maximum delay to wait before attempting to reconnect to the MQTT broker after the connection was lost, in seconds; default: 2
# retry = SECS

[RoR]
# The type of Region of Responsibility (RoR, aka "service area") to use:
#  * none: this instance does not have a RoR (the default if not specified,
#          or if the RoR section is not present)
#  * static: use a statically defined RoR
#      - load the RoR from the file specified with RoR.path,
#      - if RoR.reload is set and true, reload every general.period seconds
# type = none
# path = PATH
# reload = BOOL
